{"version":3,"file":"index.cjs","sources":["../src/core.ts","../src/renderers/html.ts","../src/components/Canvas.tsx","../src/components/Palette.tsx","../src/components/Inspector.tsx","../src/chat/ChatPanel.tsx","../src/components/Toolbar.tsx","../src/Editor.tsx","../src/components/Sidebar.tsx"],"sourcesContent":["import { EmailNode, SectionProps, TextProps, ImageProps, ButtonProps, SpacerProps, ColumnProps } from './types';\n\nexport const uid = () => Math.random().toString(36).slice(2, 10);\n\nexport const createSection = (props: Partial<SectionProps> = {}, children: EmailNode[] = []): EmailNode<SectionProps> => ({\n  id: uid(),\n  type: 'section',\n  props: {\n    backgroundColor: '#ffffff',\n    padding: '24px 24px',\n    align: 'left',\n    ...props,\n  },\n  children,\n});\n\nexport const createColumn = (props: Partial<ColumnProps> = {}, children: EmailNode[] = []): EmailNode<ColumnProps> => ({\n  id: uid(),\n  type: 'column',\n  props: {\n    width: '100%',\n    padding: '0px',\n    align: 'left',\n    ...props,\n  },\n  children,\n});\n\nexport const createText = (props: Partial<TextProps> = {}): EmailNode<TextProps> => ({\n  id: uid(),\n  type: 'text',\n  props: {\n    content: 'Write somethingâ€¦',\n    align: 'left',\n    color: '#111111',\n    fontSize: '14px',\n    lineHeight: '1.5',\n    ...props,\n  },\n});\n\nexport const createImage = (props: Partial<ImageProps> = {}): EmailNode<ImageProps> => ({\n  id: uid(),\n  type: 'image',\n  props: {\n    src: 'https://via.placeholder.com/600x200',\n    alt: 'Image',\n    width: '600',\n    ...props,\n  },\n});\n\nexport const createButton = (props: Partial<ButtonProps> = {}): EmailNode<ButtonProps> => ({\n  id: uid(),\n  type: 'button',\n  props: {\n    label: 'Click me',\n    href: '#',\n    backgroundColor: '#0f172a',\n    color: '#ffffff',\n    padding: '12px 16px',\n    borderRadius: '4px',\n    ...props,\n  },\n});\n\nexport const createSpacer = (props: Partial<SpacerProps> = {}): EmailNode<SpacerProps> => ({\n  id: uid(),\n  type: 'spacer',\n  props: {\n    height: '16px',\n    ...props,\n  },\n});\n\nexport function findNode(root: EmailNode, id: string): EmailNode | undefined {\n  if (root.id === id) return root;\n  if (!root.children) return undefined;\n  for (const child of root.children) {\n    const res = findNode(child, id);\n    if (res) return res;\n  }\n  return undefined;\n}\n\nexport function updateNode(root: EmailNode, id: string, patch: Partial<EmailNode['props']>): EmailNode {\n  if (root.id === id) {\n    return { ...root, props: { ...root.props, ...patch } } as EmailNode;\n  }\n  if (!root.children) return root;\n  return {\n    ...root,\n    children: root.children.map((c) => updateNode(c, id, patch)),\n  };\n}\n\nexport function insertNode(root: EmailNode, parentId: string, node: EmailNode, index?: number): EmailNode {\n  if (root.id === parentId) {\n    const children = [...(root.children ?? [])];\n    const i = index === undefined ? children.length : Math.max(0, Math.min(children.length, index));\n    children.splice(i, 0, node);\n    return { ...root, children };\n  }\n  if (!root.children) return root;\n  return { ...root, children: root.children.map((c) => insertNode(c, parentId, node, index)) };\n}\n\nexport function removeNode(root: EmailNode, id: string): EmailNode {\n  if (!root.children) return root.id === id ? root : root;\n  const filtered = root.children.filter((c) => c.id !== id).map((c) => removeNode(c, id));\n  return { ...root, children: filtered };\n}\n\nexport function moveNode(root: EmailNode, id: string, newParentId: string, newIndex: number): EmailNode {\n  // Extract node\n  let extracted: EmailNode | undefined;\n  function _remove(n: EmailNode): EmailNode {\n    if (!n.children) return n;\n    const idx = n.children.findIndex((c) => c.id === id);\n    if (idx >= 0) {\n      extracted = n.children[idx];\n      const nextChildren = [...n.children.slice(0, idx), ...n.children.slice(idx + 1)];\n      return { ...n, children: nextChildren };\n    }\n    return { ...n, children: n.children.map(_remove) };\n  }\n  const without = _remove(root);\n  if (!extracted) return root;\n  return insertNode(without, newParentId, extracted, newIndex);\n}\n\nexport function findParent(\n  root: EmailNode,\n  id: string,\n  parent: EmailNode | null = null\n): { parent: EmailNode | null; index: number } | null {\n  if (!root.children) return null;\n  const idx = root.children.findIndex((c) => c.id === id);\n  if (idx >= 0) return { parent: root, index: idx };\n  for (const child of root.children) {\n    const res = findParent(child, id, root);\n    if (res) return res;\n  }\n  return null;\n}\n\nexport function moveSibling(root: EmailNode, id: string, delta: number): EmailNode {\n  const info = findParent(root, id);\n  if (!info || !info.parent) return root;\n  const { parent, index } = info;\n  const children = [...(parent.children ?? [])];\n  const to = Math.max(0, Math.min(children.length - 1, index + delta));\n  if (to === index) return root;\n  const [node] = children.splice(index, 1);\n  children.splice(to, 0, node);\n  const replaced = { ...parent, children };\n  // write back replaced parent into tree\n  if (root.id === replaced.id) return replaced;\n  function write(n: EmailNode): EmailNode {\n    if (!n.children) return n;\n    if (n.id === replaced.id) return replaced;\n    return { ...n, children: n.children.map(write) };\n  }\n  return write(root);\n}\n","import { EmailNode } from '../types';\n\nconst esc = (s: unknown) => String(s ?? '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\nexport function renderToHtml(root: EmailNode): string {\n  const inner = renderNode(root);\n  return `<!doctype html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>Email</title>\n  </head>\n  <body style=\"margin:0;padding:0;background:#f6f6f6;\">\n    <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"background:#f6f6f6;\">\n      <tr>\n        <td align=\"center\">\n          <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" width=\"600\" style=\"width:600px;max-width:100%;\">\n            ${inner}\n          </table>\n        </td>\n      </tr>\n    </table>\n  </body>\n</html>`;\n}\n\nfunction renderNode(node: EmailNode): string {\n  switch (node.type) {\n    case 'section': {\n      const { backgroundColor = '#ffffff', padding = '24px 24px', align = 'left' } = node.props as any;\n      const children = (node.children ?? []).map(renderNode).join('');\n      return `<tr><td align=\"${align}\" style=\"background:${backgroundColor};padding:${esc(padding)};\">${children}</td></tr>`;\n    }\n    case 'column': {\n      const { width = '100%', padding = '0px', align = 'left' } = node.props as any;\n      const children = (node.children ?? []).map(renderNode).join('');\n      return `<table role=\"presentation\" width=\"${esc(width)}\" style=\"width:${esc(width)};\" cellpadding=\"0\" cellspacing=\"0\"><tr><td align=\"${align}\" style=\"padding:${esc(padding)};\">${children}</td></tr></table>`;\n    }\n    case 'text': {\n      const { content = '', align = 'left', color = '#111111', fontSize = '14px', lineHeight = '1.5' } = node.props as any;\n      return `<div style=\"text-align:${align};color:${color};font-size:${esc(fontSize)};line-height:${esc(lineHeight)};\">${content}</div>`;\n    }\n    case 'image': {\n      const { src = '', alt = '', width = '600', href } = node.props as any;\n      const img = `<img src=\"${esc(src)}\" alt=\"${esc(alt)}\" width=\"${esc(width)}\" style=\"display:block;border:0;outline:none;text-decoration:none;width:${esc(width)}px;max-width:100%;\" />`;\n      return href ? `<a href=\"${esc(href)}\" target=\"_blank\">${img}</a>` : img;\n    }\n    case 'button': {\n      const { label = 'Click me', href = '#', backgroundColor = '#0f172a', color = '#ffffff', padding = '12px 16px', borderRadius = '4px' } = node.props as any;\n      return `<a href=\"${esc(href)}\" style=\"display:inline-block;background:${backgroundColor};color:${color};padding:${esc(padding)};border-radius:${esc(borderRadius)};text-decoration:none;font-weight:600;\">${esc(label)}</a>`;\n    }\n    case 'spacer': {\n      const { height = '16px' } = node.props as any;\n      return `<div style=\"height:${esc(height)};line-height:${esc(height)};font-size:1px;\">&nbsp;</div>`;\n    }\n    default:\n      return '';\n  }\n}\n","import React from 'react';\nimport { EmailNode } from '../types';\n\ntype Props = {\n  root: EmailNode;\n  onSelect: (id?: string) => void;\n  selectedId?: string;\n  onMoveUp?: (id: string) => void;\n  onMoveDown?: (id: string) => void;\n  onRemove?: (id: string) => void;\n  mode?: 'edit' | 'preview';\n};\n\nexport const Canvas: React.FC<Props> = ({ root, onSelect, selectedId, onMoveUp, onMoveDown, onRemove, mode = 'edit' }) => {\n  function NodeView({ node }: { node: EmailNode }) {\n    const isSelected = mode === 'edit' && node.id === selectedId;\n    const onNodeClick: React.MouseEventHandler = (e) => {\n      e.stopPropagation();\n      if (mode === 'edit') onSelect(node.id);\n    };\n\n    // Render visual preview for each block\n    let rendered: React.ReactNode = null;\n    if (node.type === 'section') {\n      const { backgroundColor = '#ffffff', padding = '24px 24px' } = node.props as any;\n      rendered = (\n        <div style={{ background: backgroundColor, padding }}>\n          {node.children?.map((c) => (\n            <NodeView key={c.id} node={c} />\n          ))}\n        </div>\n      );\n    } else if (node.type === 'column') {\n      const { width = '100%', padding = '0px' } = node.props as any;\n      rendered = (\n        <div style={{ width, padding }}>\n          {node.children?.map((c) => (\n            <NodeView key={c.id} node={c} />\n          ))}\n        </div>\n      );\n    } else if (node.type === 'text') {\n      const { content = '', align = 'left', color = '#111111', fontSize = '14px', lineHeight = '1.5' } = node.props as any;\n      rendered = (\n        <div style={{ textAlign: align as any, color, fontSize, lineHeight }}>{content}</div>\n      );\n    } else if (node.type === 'image') {\n      const { src = '', alt = '', width = '600' } = node.props as any;\n      rendered = (\n        <img src={src} alt={alt} width={Number(width) || undefined} style={{ display: 'block', maxWidth: '100%' }} onClick={(e) => e.preventDefault()} />\n      );\n    } else if (node.type === 'button') {\n      const { label = 'Click me', href = '#', backgroundColor = '#0f172a', color = '#ffffff', padding = '12px 16px', borderRadius = '4px' } = node.props as any;\n      rendered = (\n        <a\n          href={href}\n          onClick={(e) => e.preventDefault()}\n          style={{ display: 'inline-block', background: backgroundColor, color, padding, borderRadius, textDecoration: 'none', fontWeight: 600 }}\n        >\n          {label}\n        </a>\n      );\n    } else if (node.type === 'spacer') {\n      const { height = '16px' } = node.props as any;\n      rendered = <div style={{ height, lineHeight: height, fontSize: 1 }} />;\n    }\n\n    return (\n      <div onClick={onNodeClick} className={`neb-node ${isSelected ? 'selected' : ''}`}>\n        {isSelected && (\n          <div className=\"neb-pop\" onClick={(e) => e.stopPropagation()}>\n            <button className=\"neb-btn\" onClick={() => onMoveUp?.(node.id)} title=\"Move up\">â†‘</button>\n            <button className=\"neb-btn\" onClick={() => onMoveDown?.(node.id)} title=\"Move down\">â†“</button>\n            <button className=\"neb-btn danger\" onClick={() => onRemove?.(node.id)} title=\"Remove\">âœ•</button>\n          </div>\n        )}\n        {mode === 'edit' && <div className=\"label\">{node.type}</div>}\n        {rendered}\n      </div>\n    );\n  }\n\n  return (\n    <div onClick={() => onSelect(undefined)} className=\"neb-canvas-wrap\" aria-label=\"Canvas\">\n      <div className={`neb-canvas ${mode === 'preview' ? 'neb-preview' : ''}`}>\n        <div className=\"neb-stage\">\n          <NodeView node={root} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { EmailNode } from '../types';\n\ntype Props = {\n  onInsert: (node: EmailNode) => void;\n  factories: Record<string, () => EmailNode>;\n};\n\nexport const Palette: React.FC<Props> = ({ onInsert, factories }) => {\n  return (\n    <div style={{ display: 'flex', gap: 8, flexWrap: 'wrap' }}>\n      {Object.entries(factories).map(([key, make]) => (\n        <button\n          key={key}\n          onClick={() => onInsert(make())}\n          style={{ padding: '6px 8px', borderRadius: 6, border: '1px solid #cbd5e1', background: '#fff' }}\n        >\n          + {key}\n        </button>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { EmailNode } from '../types';\n\ntype Props = {\n  node?: EmailNode;\n  onChange: (patch: Record<string, unknown>) => void;\n};\n\nexport const Inspector: React.FC<Props> = ({ node, onChange }) => {\n  if (!node) return <div className=\"neb\" style={{ color: 'var(--subtle)' }}>Select a node to edit.</div>;\n  const props = (node.props ?? {}) as any;\n  const isText = node.type === 'text';\n  const isButton = node.type === 'button';\n  const isImage = node.type === 'image';\n  const isSection = node.type === 'section';\n  const isColumn = node.type === 'column';\n\n  function Field({ label, children }: { label: string; children: React.ReactNode }) {\n    return (\n      <label className=\"field\">\n        <span style={{ fontSize: 12, color: 'var(--subtle)' }}>{label}</span>\n        {children}\n      </label>\n    );\n  }\n\n  return (\n    <div className=\"neb neb-inspector\">\n      <div className=\"body\" style={{ display: 'grid', gap: 10 }}>\n        <div className=\"bgroup\" style={{ display: 'grid', gap: 8 }}>\n          <div style={{ fontWeight: 700, color: 'var(--text)' }}>{node.type.toUpperCase()} block</div>\n\n          {isText && (\n            <>\n              <Field label=\"Content\">\n                <input className=\"neb-input\" value={props.content ?? ''} onChange={(e) => onChange({ content: e.target.value })} />\n              </Field>\n              <div className=\"row\">\n                <Field label=\"Color\">\n                  <input className=\"neb-input\" value={props.color ?? '#111111'} onChange={(e) => onChange({ color: e.target.value })} />\n                </Field>\n                <Field label=\"Align\">\n                  <select className=\"neb-select\" value={props.align ?? 'left'} onChange={(e) => onChange({ align: e.target.value })}>\n                    <option value=\"left\">Left</option>\n                    <option value=\"center\">Center</option>\n                    <option value=\"right\">Right</option>\n                  </select>\n                </Field>\n              </div>\n              <div className=\"row\">\n                <Field label=\"Font size\">\n                  <input className=\"neb-input\" value={props.fontSize ?? '14px'} onChange={(e) => onChange({ fontSize: e.target.value })} />\n                </Field>\n                <Field label=\"Line height\">\n                  <input className=\"neb-input\" value={props.lineHeight ?? '1.5'} onChange={(e) => onChange({ lineHeight: e.target.value })} />\n                </Field>\n              </div>\n            </>\n          )}\n\n          {isButton && (\n            <>\n              <Field label=\"Label\">\n                <input className=\"neb-input\" value={props.label ?? 'Click me'} onChange={(e) => onChange({ label: e.target.value })} />\n              </Field>\n              <Field label=\"Href\">\n                <input className=\"neb-input\" value={props.href ?? '#'} onChange={(e) => onChange({ href: e.target.value })} />\n              </Field>\n              <div className=\"row\">\n                <Field label=\"Background\">\n                  <input className=\"neb-input\" value={props.backgroundColor ?? '#0f172a'} onChange={(e) => onChange({ backgroundColor: e.target.value })} />\n                </Field>\n                <Field label=\"Text color\">\n                  <input className=\"neb-input\" value={props.color ?? '#ffffff'} onChange={(e) => onChange({ color: e.target.value })} />\n                </Field>\n              </div>\n              <div className=\"row\">\n                <Field label=\"Padding\">\n                  <input className=\"neb-input\" value={props.padding ?? '12px 16px'} onChange={(e) => onChange({ padding: e.target.value })} />\n                </Field>\n                <Field label=\"Radius\">\n                  <input className=\"neb-input\" value={props.borderRadius ?? '4px'} onChange={(e) => onChange({ borderRadius: e.target.value })} />\n                </Field>\n              </div>\n            </>\n          )}\n\n          {isImage && (\n            <>\n              <Field label=\"Src\">\n                <input className=\"neb-input\" value={props.src ?? ''} onChange={(e) => onChange({ src: e.target.value })} />\n              </Field>\n              <div className=\"row\">\n                <Field label=\"Alt\">\n                  <input className=\"neb-input\" value={props.alt ?? ''} onChange={(e) => onChange({ alt: e.target.value })} />\n                </Field>\n                <Field label=\"Width\">\n                  <input className=\"neb-input\" value={props.width ?? '600'} onChange={(e) => onChange({ width: e.target.value })} />\n                </Field>\n              </div>\n            </>\n          )}\n\n          {isSection && (\n            <>\n              <Field label=\"Background\">\n                <input className=\"neb-input\" value={props.backgroundColor ?? '#ffffff'} onChange={(e) => onChange({ backgroundColor: e.target.value })} />\n              </Field>\n              <Field label=\"Padding\">\n                <input className=\"neb-input\" value={props.padding ?? '24px 24px'} onChange={(e) => onChange({ padding: e.target.value })} />\n              </Field>\n            </>\n          )}\n\n          {isColumn && (\n            <>\n              <Field label=\"Width\">\n                <input className=\"neb-input\" value={props.width ?? '100%'} onChange={(e) => onChange({ width: e.target.value })} />\n              </Field>\n              <Field label=\"Padding\">\n                <input className=\"neb-input\" value={props.padding ?? '0px'} onChange={(e) => onChange({ padding: e.target.value })} />\n              </Field>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { AssistantAction, EmailNode } from '../types';\n\nexport interface ChatAdapter {\n  send: (ctx: { root: EmailNode; message: string }) => Promise<AssistantAction[]>;\n}\n\ntype Props = {\n  root: EmailNode;\n  onActions: (actions: AssistantAction[]) => void;\n  adapter: ChatAdapter;\n};\n\nexport const ChatPanel: React.FC<Props> = ({ root, onActions, adapter }) => {\n  const [input, setInput] = useState('');\n  const [busy, setBusy] = useState(false);\n\n  async function onSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    if (!input.trim()) return;\n    setBusy(true);\n    try {\n      const actions = await adapter.send({ root, message: input.trim() });\n      onActions(actions);\n      setInput('');\n    } finally {\n      setBusy(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit} style={{ display: 'flex', gap: 8 }}>\n      <input\n        placeholder=\"Ask AI to update your emailâ€¦\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        disabled={busy}\n        style={{ flex: 1, padding: 8, border: '1px solid #cbd5e1', borderRadius: 8 }}\n      />\n      <button disabled={busy} style={{ padding: '8px 12px', borderRadius: 8, border: '1px solid #0ea5e9', background: '#0ea5e9', color: '#fff' }}>\n        {busy ? 'Thinkingâ€¦' : 'Send'}\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  mode: 'edit' | 'preview';\n  onSetMode: (m: 'edit' | 'preview') => void;\n  onCopyHtml: () => void;\n  onExportHtml: () => void;\n  onPreviewWidth: (w: number) => void;\n  onUndo: () => void;\n  onRedo: () => void;\n};\n\nexport const Toolbar: React.FC<Props> = ({ mode, onSetMode, onCopyHtml, onExportHtml, onPreviewWidth, onUndo, onRedo }) => {\n  return (\n    <div className=\"neb neb-toolbar\">\n      <div className=\"group\">\n        <button className=\"neb-btn ghost\" title=\"Undo\" onClick={onUndo}>â†¶</button>\n        <button className=\"neb-btn ghost\" title=\"Redo\" onClick={onRedo}>â†·</button>\n      </div>\n      <div className=\"group\">\n        <span style={{ color: 'var(--subtle)', fontSize: 12 }}>Mode</span>\n        <button className=\"neb-btn\" onClick={() => onSetMode('edit')} style={{ outline: mode === 'edit' ? `2px solid var(--accent)` : undefined }}>Edit</button>\n        <button className=\"neb-btn\" onClick={() => onSetMode('preview')} style={{ outline: mode === 'preview' ? `2px solid var(--accent)` : undefined }}>Preview</button>\n      </div>\n      <div className=\"group\">\n        <span style={{ color: 'var(--subtle)', fontSize: 12 }}>Preview</span>\n        <button className=\"neb-btn\" onClick={() => onPreviewWidth(360)}>Mobile</button>\n        <button className=\"neb-btn\" onClick={() => onPreviewWidth(600)}>Default</button>\n        <button className=\"neb-btn\" onClick={() => onPreviewWidth(800)}>Desktop</button>\n      </div>\n      <div className=\"group\">\n        <button className=\"neb-btn\" onClick={onCopyHtml}>Copy HTML</button>\n        <button className=\"neb-btn primary\" onClick={onExportHtml}>Export</button>\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport { Canvas } from './components/Canvas';\nimport { Palette } from './components/Palette';\nimport { Inspector } from './components/Inspector';\nimport { ChatPanel, ChatAdapter } from './chat/ChatPanel';\n// Sidebar removed; left panel will host AI chat\nimport { Toolbar } from './components/Toolbar';\nimport { EmailNode } from './types';\nimport { createButton, createColumn, createImage, createSection, createSpacer, createText, findNode, insertNode, removeNode, updateNode, moveSibling } from './core';\nimport { renderToHtml } from './renderers/html';\n\nexport type EditorProps = {\n  initial?: EmailNode;\n  chatAdapter?: ChatAdapter;\n  onChange?: (root: EmailNode) => void;\n};\n\nexport const Editor: React.FC<EditorProps> = ({ initial, chatAdapter, onChange }) => {\n  const [root, setRoot] = useState<EmailNode>(() => initial ?? createSection({}, [createColumn({}, [createText({ content: 'Hello' }), createSpacer(), createButton()])]))\n  const [selectedId, setSelectedId] = useState<string | undefined>(root.id);\n  const [mode, setMode] = useState<'edit' | 'preview'>('edit');\n  const [undoStack, setUndoStack] = useState<EmailNode[]>([]);\n  const [redoStack, setRedoStack] = useState<EmailNode[]>([]);\n\n  const selected = useMemo(() => (selectedId ? findNode(root, selectedId) : undefined), [root, selectedId]);\n\n  function emit(next: EmailNode, pushHistory: boolean = true) {\n    if (pushHistory) {\n      setUndoStack((s) => [...s, root]);\n      setRedoStack([]);\n    }\n    setRoot(next);\n    onChange?.(next);\n  }\n\n  function undo() {\n    setUndoStack((s) => {\n      if (s.length === 0) return s;\n      const prev = s[s.length - 1];\n      setRedoStack((r) => [...r, root]);\n      setRoot(prev);\n      onChange?.(prev);\n      return s.slice(0, -1);\n    });\n  }\n\n  function redo() {\n    setRedoStack((r) => {\n      if (r.length === 0) return r;\n      const next = r[r.length - 1];\n      setUndoStack((s) => [...s, root]);\n      setRoot(next);\n      onChange?.(next);\n      return r.slice(0, -1);\n    });\n  }\n\n  function add(node: EmailNode) {\n    const parentId = selectedId ?? root.id;\n    emit(insertNode(root, parentId, node));\n  }\n\n  function applyActions(actions: Array<{ type: string; [k: string]: any }>) {\n    let current = root;\n    for (const a of actions) {\n      switch (a.type) {\n        case 'insert':\n          current = insertNode(current, a.parentId, a.node, a.index);\n          break;\n        case 'update':\n          current = updateNode(current, a.id, a.props);\n          break;\n        case 'remove':\n          current = removeNode(current, a.id);\n          break;\n        case 'select':\n          setSelectedId(a.id);\n          break;\n      }\n    }\n    emit(current);\n  }\n\n  const factories = {\n    text: () => createText(),\n    image: () => createImage(),\n    button: () => createButton(),\n    spacer: () => createSpacer(),\n    column: () => createColumn(),\n    section: () => createSection(),\n  } as const;\n\n  const adapter: ChatAdapter = chatAdapter ?? {\n    async send({ message }) {\n      // naive local adapter: parse a very simple command\n      if (/add text/i.test(message)) {\n        return [{ type: 'insert', parentId: selectedId ?? root.id, node: createText({ content: 'New text' }) }];\n      }\n      if (/add button/i.test(message)) {\n        return [{ type: 'insert', parentId: selectedId ?? root.id, node: createButton({ label: 'Buy now' }) }];\n      }\n      if (/remove/i.test(message) && selectedId) {\n        return [{ type: 'remove', id: selectedId }];\n      }\n      if (/title:\\s*(.+)/i.test(message)) {\n        const m = message.match(/title:\\s*(.+)/i)!;\n        return [{ type: 'update', id: selectedId ?? root.id, props: { content: m[1] } }];\n      }\n      return [];\n    },\n  };\n\n  const [stageWidth, setStageWidth] = useState(600);\n  const html = useMemo(() => renderToHtml(root), [root]);\n\n  // Templates removed; left panel hosts Chat instead\n\n  return (\n    <div className=\"neb neb-reset neb-app\" style={{ ['--stage-width' as any]: `${stageWidth}px` }}>\n      <Toolbar\n        mode={mode}\n        onSetMode={setMode}\n        onCopyHtml={() => navigator.clipboard?.writeText(html)}\n        onExportHtml={() => {\n          const blob = new Blob([html], { type: 'text/html;charset=utf-8' });\n          const url = URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = 'email.html';\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          URL.revokeObjectURL(url);\n        }}\n        onPreviewWidth={(w) => setStageWidth(w)}\n        onUndo={undo}\n        onRedo={redo}\n      />\n      <div className=\"neb-shell\" style={{ gridTemplateColumns: '320px 1fr 340px' }}>\n        <div className=\"neb-panel\">\n          <div className=\"header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <div className=\"neb-badges\"><span className=\"neb-badge\">AI</span></div>\n            <div className=\"neb-badges\"><span className=\"neb-badge\">Chat</span></div>\n          </div>\n          <div className=\"body\">\n            {chatAdapter !== null && (\n              <ChatPanel root={root} onActions={applyActions} adapter={adapter} />\n            )}\n          </div>\n        </div>\n        <div className=\"neb-panel\">\n          <div className=\"header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <div className=\"neb-badges\">\n              <span className=\"neb-badge\">Width {stageWidth}px</span>\n              <span className=\"neb-badge\">{mode === 'edit' ? 'Edit' : 'Preview'}</span>\n            </div>\n            <div className=\"neb-badges\">\n              <span className=\"neb-badge\">Blocks</span>\n            </div>\n          </div>\n          <div className=\"body\" style={{ display: 'grid', gap: 12 }}>\n            <Palette onInsert={add} factories={factories as any} />\n            <Canvas\n              root={root}\n              onSelect={setSelectedId}\n              selectedId={selectedId}\n              onMoveUp={(id) => emit(moveSibling(root, id, -1))}\n              onMoveDown={(id) => emit(moveSibling(root, id, +1))}\n              onRemove={(id) => emit(removeNode(root, id))}\n              mode={mode}\n            />\n          </div>\n        </div>\n\n        <div className=\"neb-panel neb-inspector\">\n          <div className=\"header\">Inspect</div>\n          <div className=\"body\">\n            <Inspector node={selected} onChange={(patch) => selected && emit(updateNode(root, selected.id, patch))} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Editor;\n","import React from 'react';\nimport { EmailNode } from '../types';\n\ntype Props = {\n  templates: Array<{ id: string; name: string; make: () => EmailNode }>;\n  onApply: (node: EmailNode) => void;\n};\n\nexport const Sidebar: React.FC<Props> = ({ templates, onApply }) => {\n  return (\n    <div className=\"neb neb-panel neb-sidebar\">\n      <div className=\"header\">Templates</div>\n      <div className=\"body\">\n        {templates.map((t) => (\n          <div key={t.id} className=\"template\" onClick={() => onApply(t.make())}>\n            {t.name}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"names":["uid","Math","random","toString","slice","createSection","props","children","id","type","backgroundColor","padding","align","createColumn","width","createText","content","color","fontSize","lineHeight","createImage","src","alt","createButton","label","href","borderRadius","createSpacer","height","findNode","root","undefined","child","res","updateNode","patch","map","c","insertNode","parentId","node","index","_a","i","length","max","min","splice","removeNode","filtered","filter","moveNode","newParentId","newIndex","extracted","_remove","n","idx","findIndex","nextChildren","without","findParent","parent","moveSibling","delta","info","to","replaced","write","esc","s","String","replace","renderToHtml","inner","renderNode","join","_b","img","Canvas","onSelect","selectedId","onMoveUp","onMoveDown","onRemove","mode","NodeView","isSelected","onNodeClick","e","stopPropagation","rendered","_jsx","style","background","textAlign","Number","display","maxWidth","onClick","preventDefault","textDecoration","fontWeight","_jsxs","className","title","Palette","onInsert","factories","gap","flexWrap","Object","entries","key","make","border","Inspector","onChange","isText","isButton","isImage","isSection","isColumn","Field","toUpperCase","_Fragment","value","target","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","ChatPanel","onActions","adapter","input","setInput","useState","busy","setBusy","onSubmit","trim","actions","send","message","placeholder","disabled","flex","Toolbar","onSetMode","onCopyHtml","onExportHtml","onPreviewWidth","onUndo","onRedo","outline","Editor","initial","chatAdapter","setRoot","setSelectedId","setMode","undoStack","setUndoStack","redoStack","setRedoStack","selected","useMemo","emit","next","pushHistory","undo","prev","r","redo","add","applyActions","current","a","text","image","button","spacer","column","section","test","m","match","stageWidth","setStageWidth","html","navigator","clipboard","writeText","blob","Blob","url","URL","createObjectURL","document","createElement","download","body","appendChild","click","remove","revokeObjectURL","w","gridTemplateColumns","justifyContent","alignItems","Sidebar","templates","onApply","t","name"],"mappings":"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"}
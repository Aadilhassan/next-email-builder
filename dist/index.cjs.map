{"version":3,"file":"index.cjs","sources":["../src/core.ts","../src/renderers/html.ts","../src/components/Canvas.tsx","../src/components/Palette.tsx","../src/components/Inspector.tsx","../src/chat/ChatPanel.tsx","../src/Editor.tsx"],"sourcesContent":["import { EmailNode, SectionProps, TextProps, ImageProps, ButtonProps, SpacerProps, ColumnProps } from './types';\n\nexport const uid = () => Math.random().toString(36).slice(2, 10);\n\nexport const createSection = (props: Partial<SectionProps> = {}, children: EmailNode[] = []): EmailNode<SectionProps> => ({\n  id: uid(),\n  type: 'section',\n  props: {\n    backgroundColor: '#ffffff',\n    padding: '24px 24px',\n    align: 'left',\n    ...props,\n  },\n  children,\n});\n\nexport const createColumn = (props: Partial<ColumnProps> = {}, children: EmailNode[] = []): EmailNode<ColumnProps> => ({\n  id: uid(),\n  type: 'column',\n  props: {\n    width: '100%',\n    padding: '0px',\n    align: 'left',\n    ...props,\n  },\n  children,\n});\n\nexport const createText = (props: Partial<TextProps> = {}): EmailNode<TextProps> => ({\n  id: uid(),\n  type: 'text',\n  props: {\n    content: 'Write somethingâ€¦',\n    align: 'left',\n    color: '#111111',\n    fontSize: '14px',\n    lineHeight: '1.5',\n    ...props,\n  },\n});\n\nexport const createImage = (props: Partial<ImageProps> = {}): EmailNode<ImageProps> => ({\n  id: uid(),\n  type: 'image',\n  props: {\n    src: 'https://via.placeholder.com/600x200',\n    alt: 'Image',\n    width: '600',\n    ...props,\n  },\n});\n\nexport const createButton = (props: Partial<ButtonProps> = {}): EmailNode<ButtonProps> => ({\n  id: uid(),\n  type: 'button',\n  props: {\n    label: 'Click me',\n    href: '#',\n    backgroundColor: '#0f172a',\n    color: '#ffffff',\n    padding: '12px 16px',\n    borderRadius: '4px',\n    ...props,\n  },\n});\n\nexport const createSpacer = (props: Partial<SpacerProps> = {}): EmailNode<SpacerProps> => ({\n  id: uid(),\n  type: 'spacer',\n  props: {\n    height: '16px',\n    ...props,\n  },\n});\n\nexport function findNode(root: EmailNode, id: string): EmailNode | undefined {\n  if (root.id === id) return root;\n  if (!root.children) return undefined;\n  for (const child of root.children) {\n    const res = findNode(child, id);\n    if (res) return res;\n  }\n  return undefined;\n}\n\nexport function updateNode(root: EmailNode, id: string, patch: Partial<EmailNode['props']>): EmailNode {\n  if (root.id === id) {\n    return { ...root, props: { ...root.props, ...patch } } as EmailNode;\n  }\n  if (!root.children) return root;\n  return {\n    ...root,\n    children: root.children.map((c) => updateNode(c, id, patch)),\n  };\n}\n\nexport function insertNode(root: EmailNode, parentId: string, node: EmailNode, index?: number): EmailNode {\n  if (root.id === parentId) {\n    const children = [...(root.children ?? [])];\n    const i = index === undefined ? children.length : Math.max(0, Math.min(children.length, index));\n    children.splice(i, 0, node);\n    return { ...root, children };\n  }\n  if (!root.children) return root;\n  return { ...root, children: root.children.map((c) => insertNode(c, parentId, node, index)) };\n}\n\nexport function removeNode(root: EmailNode, id: string): EmailNode {\n  if (!root.children) return root.id === id ? root : root;\n  const filtered = root.children.filter((c) => c.id !== id).map((c) => removeNode(c, id));\n  return { ...root, children: filtered };\n}\n","import { EmailNode } from '../types';\n\nconst esc = (s: unknown) => String(s ?? '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\nexport function renderToHtml(root: EmailNode): string {\n  const inner = renderNode(root);\n  return `<!doctype html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>Email</title>\n  </head>\n  <body style=\"margin:0;padding:0;background:#f6f6f6;\">\n    <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"background:#f6f6f6;\">\n      <tr>\n        <td align=\"center\">\n          <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" width=\"600\" style=\"width:600px;max-width:100%;\">\n            ${inner}\n          </table>\n        </td>\n      </tr>\n    </table>\n  </body>\n</html>`;\n}\n\nfunction renderNode(node: EmailNode): string {\n  switch (node.type) {\n    case 'section': {\n      const { backgroundColor = '#ffffff', padding = '24px 24px', align = 'left' } = node.props as any;\n      const children = (node.children ?? []).map(renderNode).join('');\n      return `<tr><td align=\"${align}\" style=\"background:${backgroundColor};padding:${esc(padding)};\">${children}</td></tr>`;\n    }\n    case 'column': {\n      const { width = '100%', padding = '0px', align = 'left' } = node.props as any;\n      const children = (node.children ?? []).map(renderNode).join('');\n      return `<table role=\"presentation\" width=\"${esc(width)}\" style=\"width:${esc(width)};\" cellpadding=\"0\" cellspacing=\"0\"><tr><td align=\"${align}\" style=\"padding:${esc(padding)};\">${children}</td></tr></table>`;\n    }\n    case 'text': {\n      const { content = '', align = 'left', color = '#111111', fontSize = '14px', lineHeight = '1.5' } = node.props as any;\n      return `<div style=\"text-align:${align};color:${color};font-size:${esc(fontSize)};line-height:${esc(lineHeight)};\">${content}</div>`;\n    }\n    case 'image': {\n      const { src = '', alt = '', width = '600', href } = node.props as any;\n      const img = `<img src=\"${esc(src)}\" alt=\"${esc(alt)}\" width=\"${esc(width)}\" style=\"display:block;border:0;outline:none;text-decoration:none;width:${esc(width)}px;max-width:100%;\" />`;\n      return href ? `<a href=\"${esc(href)}\" target=\"_blank\">${img}</a>` : img;\n    }\n    case 'button': {\n      const { label = 'Click me', href = '#', backgroundColor = '#0f172a', color = '#ffffff', padding = '12px 16px', borderRadius = '4px' } = node.props as any;\n      return `<a href=\"${esc(href)}\" style=\"display:inline-block;background:${backgroundColor};color:${color};padding:${esc(padding)};border-radius:${esc(borderRadius)};text-decoration:none;font-weight:600;\">${esc(label)}</a>`;\n    }\n    case 'spacer': {\n      const { height = '16px' } = node.props as any;\n      return `<div style=\"height:${esc(height)};line-height:${esc(height)};font-size:1px;\">&nbsp;</div>`;\n    }\n    default:\n      return '';\n  }\n}\n","import React from 'react';\nimport { EmailNode } from '../types';\n\ntype Props = {\n  root: EmailNode;\n  onSelect: (id?: string) => void;\n  selectedId?: string;\n};\n\nexport const Canvas: React.FC<Props> = ({ root, onSelect, selectedId }) => {\n  function NodeView({ node }: { node: EmailNode }) {\n    const isSelected = node.id === selectedId;\n    return (\n      <div\n        onClick={(e) => {\n          e.stopPropagation();\n          onSelect(node.id);\n        }}\n        style={{\n          border: isSelected ? '2px solid #3b82f6' : '1px dashed #cbd5e1',\n          margin: 6,\n          padding: 6,\n          borderRadius: 6,\n          background: node.type === 'section' ? '#fff' : 'transparent',\n        }}\n      >\n        <div style={{ fontSize: 12, color: '#64748b', marginBottom: 4 }}>{node.type}</div>\n        {node.children?.map((c) => (\n          <NodeView key={c.id} node={c} />\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      onClick={() => onSelect(undefined)}\n      style={{ background: '#f1f5f9', padding: 12, borderRadius: 8, minHeight: 300 }}\n      aria-label=\"Canvas\"\n    >\n      <NodeView node={root} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { EmailNode } from '../types';\n\ntype Props = {\n  onInsert: (node: EmailNode) => void;\n  factories: Record<string, () => EmailNode>;\n};\n\nexport const Palette: React.FC<Props> = ({ onInsert, factories }) => {\n  return (\n    <div style={{ display: 'flex', gap: 8, flexWrap: 'wrap' }}>\n      {Object.entries(factories).map(([key, make]) => (\n        <button\n          key={key}\n          onClick={() => onInsert(make())}\n          style={{ padding: '6px 8px', borderRadius: 6, border: '1px solid #cbd5e1', background: '#fff' }}\n        >\n          + {key}\n        </button>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { EmailNode } from '../types';\n\ntype Props = {\n  node?: EmailNode;\n  onChange: (patch: Record<string, unknown>) => void;\n};\n\nexport const Inspector: React.FC<Props> = ({ node, onChange }) => {\n  if (!node) return <div style={{ color: '#64748b' }}>Select a node to edit.</div>;\n  const entries = Object.entries(node.props ?? {});\n  return (\n    <div style={{ display: 'grid', gap: 8 }}>\n      <div style={{ fontWeight: 600 }}>{node.type} props</div>\n      {entries.map(([k, v]) => (\n        <label key={k} style={{ display: 'grid', gap: 4 }}>\n          <span style={{ fontSize: 12, color: '#475569' }}>{k}</span>\n          <input\n            value={String(v ?? '')}\n            onChange={(e) => onChange({ [k]: e.target.value })}\n            style={{ padding: 6, border: '1px solid #cbd5e1', borderRadius: 6 }}\n          />\n        </label>\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { AssistantAction, EmailNode } from '../types';\n\nexport interface ChatAdapter {\n  send: (ctx: { root: EmailNode; message: string }) => Promise<AssistantAction[]>;\n}\n\ntype Props = {\n  root: EmailNode;\n  onActions: (actions: AssistantAction[]) => void;\n  adapter: ChatAdapter;\n};\n\nexport const ChatPanel: React.FC<Props> = ({ root, onActions, adapter }) => {\n  const [input, setInput] = useState('');\n  const [busy, setBusy] = useState(false);\n\n  async function onSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    if (!input.trim()) return;\n    setBusy(true);\n    try {\n      const actions = await adapter.send({ root, message: input.trim() });\n      onActions(actions);\n      setInput('');\n    } finally {\n      setBusy(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit} style={{ display: 'flex', gap: 8 }}>\n      <input\n        placeholder=\"Ask AI to update your emailâ€¦\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        disabled={busy}\n        style={{ flex: 1, padding: 8, border: '1px solid #cbd5e1', borderRadius: 8 }}\n      />\n      <button disabled={busy} style={{ padding: '8px 12px', borderRadius: 8, border: '1px solid #0ea5e9', background: '#0ea5e9', color: '#fff' }}>\n        {busy ? 'Thinkingâ€¦' : 'Send'}\n      </button>\n    </form>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport { Canvas } from './components/Canvas';\nimport { Palette } from './components/Palette';\nimport { Inspector } from './components/Inspector';\nimport { ChatPanel, ChatAdapter } from './chat/ChatPanel';\nimport { EmailNode } from './types';\nimport { createButton, createColumn, createImage, createSection, createSpacer, createText, findNode, insertNode, removeNode, uid, updateNode } from './core';\nimport { renderToHtml } from './renderers/html';\n\nexport type EditorProps = {\n  initial?: EmailNode;\n  chatAdapter?: ChatAdapter;\n  onChange?: (root: EmailNode) => void;\n};\n\nexport const Editor: React.FC<EditorProps> = ({ initial, chatAdapter, onChange }) => {\n  const [root, setRoot] = useState<EmailNode>(() => initial ?? createSection({}, [createColumn({}, [createText({ content: 'Hello' }), createSpacer(), createButton()])]))\n  const [selectedId, setSelectedId] = useState<string | undefined>(root.id);\n\n  const selected = useMemo(() => (selectedId ? findNode(root, selectedId) : undefined), [root, selectedId]);\n\n  function emit(next: EmailNode) {\n    setRoot(next);\n    onChange?.(next);\n  }\n\n  function add(node: EmailNode) {\n    const parentId = selectedId ?? root.id;\n    emit(insertNode(root, parentId, node));\n  }\n\n  function applyActions(actions: Array<{ type: string; [k: string]: any }>) {\n    let current = root;\n    for (const a of actions) {\n      switch (a.type) {\n        case 'insert':\n          current = insertNode(current, a.parentId, a.node, a.index);\n          break;\n        case 'update':\n          current = updateNode(current, a.id, a.props);\n          break;\n        case 'remove':\n          current = removeNode(current, a.id);\n          break;\n        case 'select':\n          setSelectedId(a.id);\n          break;\n      }\n    }\n    emit(current);\n  }\n\n  const factories = {\n    text: () => createText(),\n    image: () => createImage(),\n    button: () => createButton(),\n    spacer: () => createSpacer(),\n    column: () => createColumn(),\n    section: () => createSection(),\n  } as const;\n\n  const adapter: ChatAdapter = chatAdapter ?? {\n    async send({ message }) {\n      // naive local adapter: parse a very simple command\n      if (/add text/i.test(message)) {\n        return [{ type: 'insert', parentId: selectedId ?? root.id, node: createText({ content: 'New text' }) }];\n      }\n      if (/add button/i.test(message)) {\n        return [{ type: 'insert', parentId: selectedId ?? root.id, node: createButton({ label: 'Buy now' }) }];\n      }\n      if (/remove/i.test(message) && selectedId) {\n        return [{ type: 'remove', id: selectedId }];\n      }\n      if (/title:\\s*(.+)/i.test(message)) {\n        const m = message.match(/title:\\s*(.+)/i)!;\n        return [{ type: 'update', id: selectedId ?? root.id, props: { content: m[1] } }];\n      }\n      return [];\n    },\n  };\n\n  const html = useMemo(() => renderToHtml(root), [root]);\n\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: '260px 1fr 320px', gap: 12, alignItems: 'start' }}>\n      <div style={{ display: 'grid', gap: 12 }}>\n        <div style={{ fontWeight: 700 }}>Palette</div>\n        <Palette onInsert={add} factories={factories as any} />\n        {chatAdapter !== null && (\n          <div style={{ display: 'grid', gap: 8 }}>\n            <div style={{ fontWeight: 700 }}>AI</div>\n            <ChatPanel root={root} onActions={applyActions} adapter={adapter} />\n          </div>\n        )}\n      </div>\n\n      <div style={{ display: 'grid', gap: 12 }}>\n        <div style={{ fontWeight: 700 }}>Canvas</div>\n        <Canvas root={root} onSelect={setSelectedId} selectedId={selectedId} />\n        <div style={{ fontWeight: 700 }}>Preview (HTML)</div>\n        <iframe title=\"preview\" style={{ width: '100%', height: 360, background: '#fff', border: '1px solid #e2e8f0', borderRadius: 8 }} srcDoc={html} />\n      </div>\n\n      <div style={{ display: 'grid', gap: 12 }}>\n        <div style={{ fontWeight: 700 }}>Inspector</div>\n        <Inspector node={selected} onChange={(patch) => selected && emit(updateNode(root, selected.id, patch))} />\n        <button onClick={() => navigator.clipboard?.writeText(html)} style={{ padding: '8px 12px', borderRadius: 8, border: '1px solid #cbd5e1', background: '#fff' }}>Copy HTML</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Editor;\n"],"names":["uid","Math","random","toString","slice","createSection","props","children","id","type","backgroundColor","padding","align","createColumn","width","createText","content","color","fontSize","lineHeight","createImage","src","alt","createButton","label","href","borderRadius","createSpacer","height","findNode","root","undefined","child","res","updateNode","patch","map","c","insertNode","parentId","node","index","_a","i","length","max","min","splice","removeNode","filtered","filter","esc","s","String","replace","renderToHtml","inner","renderNode","join","_b","img","Canvas","onSelect","selectedId","NodeView","isSelected","_jsxs","onClick","e","stopPropagation","style","border","margin","background","_jsx","marginBottom","minHeight","Palette","onInsert","factories","display","gap","flexWrap","Object","entries","key","make","Inspector","onChange","fontWeight","k","v","value","target","ChatPanel","onActions","adapter","input","setInput","useState","busy","setBusy","onSubmit","preventDefault","trim","actions","send","message","placeholder","disabled","flex","Editor","initial","chatAdapter","setRoot","setSelectedId","selected","useMemo","emit","next","add","applyActions","current","a","text","image","button","spacer","column","section","test","m","match","html","gridTemplateColumns","alignItems","title","srcDoc","navigator","clipboard","writeText"],"mappings":"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"}
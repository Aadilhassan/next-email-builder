{"version":3,"file":"index.cjs","sources":["../src/core.ts","../src/renderers/html.ts","../src/components/Canvas.tsx","../src/components/Inspector.tsx","../src/chat/ChatPanel.tsx","../src/components/Toolbar.tsx","../src/Editor.tsx","../src/components/Sidebar.tsx"],"sourcesContent":["import { EmailNode, SectionProps, TextProps, ImageProps, ButtonProps, SpacerProps, ColumnProps } from './types';\n\nexport const uid = () => Math.random().toString(36).slice(2, 10);\n\nexport const createSection = (props: Partial<SectionProps> = {}, children: EmailNode[] = []): EmailNode<SectionProps> => ({\n  id: uid(),\n  type: 'section',\n  props: {\n    backgroundColor: '#ffffff',\n    padding: '24px 24px',\n    align: 'left',\n    ...props,\n  },\n  children,\n});\n\nexport const createColumn = (props: Partial<ColumnProps> = {}, children: EmailNode[] = []): EmailNode<ColumnProps> => ({\n  id: uid(),\n  type: 'column',\n  props: {\n    width: '100%',\n    padding: '0px',\n    align: 'left',\n    ...props,\n  },\n  children,\n});\n\nexport const createText = (props: Partial<TextProps> = {}): EmailNode<TextProps> => ({\n  id: uid(),\n  type: 'text',\n  props: {\n    content: 'Write somethingâ€¦',\n    align: 'left',\n    color: '#111111',\n    fontSize: '14px',\n    lineHeight: '1.5',\n    ...props,\n  },\n});\n\nexport const createImage = (props: Partial<ImageProps> = {}): EmailNode<ImageProps> => ({\n  id: uid(),\n  type: 'image',\n  props: {\n    src: 'https://via.placeholder.com/600x200',\n    alt: 'Image',\n    width: '600',\n    ...props,\n  },\n});\n\nexport const createButton = (props: Partial<ButtonProps> = {}): EmailNode<ButtonProps> => ({\n  id: uid(),\n  type: 'button',\n  props: {\n    label: 'Click me',\n    href: '#',\n    backgroundColor: '#0f172a',\n    color: '#ffffff',\n    padding: '12px 16px',\n    borderRadius: '4px',\n    ...props,\n  },\n});\n\nexport const createSpacer = (props: Partial<SpacerProps> = {}): EmailNode<SpacerProps> => ({\n  id: uid(),\n  type: 'spacer',\n  props: {\n    height: '16px',\n    ...props,\n  },\n});\n\nexport function findNode(root: EmailNode, id: string): EmailNode | undefined {\n  if (root.id === id) return root;\n  if (!root.children) return undefined;\n  for (const child of root.children) {\n    const res = findNode(child, id);\n    if (res) return res;\n  }\n  return undefined;\n}\n\nexport function updateNode(root: EmailNode, id: string, patch: Partial<EmailNode['props']>): EmailNode {\n  if (root.id === id) {\n    return { ...root, props: { ...root.props, ...patch } } as EmailNode;\n  }\n  if (!root.children) return root;\n  return {\n    ...root,\n    children: root.children.map((c) => updateNode(c, id, patch)),\n  };\n}\n\nexport function insertNode(root: EmailNode, parentId: string, node: EmailNode, index?: number): EmailNode {\n  if (root.id === parentId) {\n    const children = [...(root.children ?? [])];\n    const i = index === undefined ? children.length : Math.max(0, Math.min(children.length, index));\n    children.splice(i, 0, node);\n    return { ...root, children };\n  }\n  if (!root.children) return root;\n  return { ...root, children: root.children.map((c) => insertNode(c, parentId, node, index)) };\n}\n\nexport function removeNode(root: EmailNode, id: string): EmailNode {\n  if (!root.children) return root.id === id ? root : root;\n  const filtered = root.children.filter((c) => c.id !== id).map((c) => removeNode(c, id));\n  return { ...root, children: filtered };\n}\n\nexport function moveNode(root: EmailNode, id: string, newParentId: string, newIndex: number): EmailNode {\n  // Extract node\n  let extracted: EmailNode | undefined;\n  function _remove(n: EmailNode): EmailNode {\n    if (!n.children) return n;\n    const idx = n.children.findIndex((c) => c.id === id);\n    if (idx >= 0) {\n      extracted = n.children[idx];\n      const nextChildren = [...n.children.slice(0, idx), ...n.children.slice(idx + 1)];\n      return { ...n, children: nextChildren };\n    }\n    return { ...n, children: n.children.map(_remove) };\n  }\n  const without = _remove(root);\n  if (!extracted) return root;\n  return insertNode(without, newParentId, extracted, newIndex);\n}\n\nexport function findParent(\n  root: EmailNode,\n  id: string,\n  parent: EmailNode | null = null\n): { parent: EmailNode | null; index: number } | null {\n  if (!root.children) return null;\n  const idx = root.children.findIndex((c) => c.id === id);\n  if (idx >= 0) return { parent: root, index: idx };\n  for (const child of root.children) {\n    const res = findParent(child, id, root);\n    if (res) return res;\n  }\n  return null;\n}\n\nexport function moveSibling(root: EmailNode, id: string, delta: number): EmailNode {\n  const info = findParent(root, id);\n  if (!info || !info.parent) return root;\n  const { parent, index } = info;\n  const children = [...(parent.children ?? [])];\n  const to = Math.max(0, Math.min(children.length - 1, index + delta));\n  if (to === index) return root;\n  const [node] = children.splice(index, 1);\n  children.splice(to, 0, node);\n  const replaced = { ...parent, children };\n  // write back replaced parent into tree\n  if (root.id === replaced.id) return replaced;\n  function write(n: EmailNode): EmailNode {\n    if (!n.children) return n;\n    if (n.id === replaced.id) return replaced;\n    return { ...n, children: n.children.map(write) };\n  }\n  return write(root);\n}\n","import { EmailNode } from '../types';\n\nconst esc = (s: unknown) => String(s ?? '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\nexport function renderToHtml(root: EmailNode): string {\n  const inner = renderNode(root);\n  return `<!doctype html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>Email</title>\n  </head>\n  <body style=\"margin:0;padding:0;background:#f6f6f6;\">\n    <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"background:#f6f6f6;\">\n      <tr>\n        <td align=\"center\">\n          <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" width=\"600\" style=\"width:600px;max-width:100%;\">\n            ${inner}\n          </table>\n        </td>\n      </tr>\n    </table>\n  </body>\n</html>`;\n}\n\nfunction renderNode(node: EmailNode): string {\n  switch (node.type) {\n    case 'section': {\n      const { backgroundColor = '#ffffff', padding = '24px 24px', align = 'left' } = node.props as any;\n      const children = (node.children ?? []).map(renderNode).join('');\n      return `<tr><td align=\"${align}\" style=\"background:${backgroundColor};padding:${esc(padding)};\">${children}</td></tr>`;\n    }\n    case 'column': {\n      const { width = '100%', padding = '0px', align = 'left' } = node.props as any;\n      const children = (node.children ?? []).map(renderNode).join('');\n      return `<table role=\"presentation\" width=\"${esc(width)}\" style=\"width:${esc(width)};\" cellpadding=\"0\" cellspacing=\"0\"><tr><td align=\"${align}\" style=\"padding:${esc(padding)};\">${children}</td></tr></table>`;\n    }\n    case 'text': {\n      const { content = '', align = 'left', color = '#111111', fontSize = '14px', lineHeight = '1.5' } = node.props as any;\n      return `<div style=\"text-align:${align};color:${color};font-size:${esc(fontSize)};line-height:${esc(lineHeight)};\">${content}</div>`;\n    }\n    case 'image': {\n      const { src = '', alt = '', width = '600', href } = node.props as any;\n      const img = `<img src=\"${esc(src)}\" alt=\"${esc(alt)}\" width=\"${esc(width)}\" style=\"display:block;border:0;outline:none;text-decoration:none;width:${esc(width)}px;max-width:100%;\" />`;\n      return href ? `<a href=\"${esc(href)}\" target=\"_blank\">${img}</a>` : img;\n    }\n    case 'button': {\n      const { label = 'Click me', href = '#', backgroundColor = '#0f172a', color = '#ffffff', padding = '12px 16px', borderRadius = '4px' } = node.props as any;\n      return `<a href=\"${esc(href)}\" style=\"display:inline-block;background:${backgroundColor};color:${color};padding:${esc(padding)};border-radius:${esc(borderRadius)};text-decoration:none;font-weight:600;\">${esc(label)}</a>`;\n    }\n    case 'spacer': {\n      const { height = '16px' } = node.props as any;\n      return `<div style=\"height:${esc(height)};line-height:${esc(height)};font-size:1px;\">&nbsp;</div>`;\n    }\n    default:\n      return '';\n  }\n}\n","import React, { useState } from 'react';\nimport { EmailNode } from '../types';\n\ntype Props = {\n  root: EmailNode;\n  onSelect: (id?: string) => void;\n  selectedId?: string;\n  onMoveUp?: (id: string) => void;\n  onMoveDown?: (id: string) => void;\n  onRemove?: (id: string) => void;\n  mode?: 'edit' | 'preview';\n  factories?: Record<string, () => EmailNode>;\n  onInsertAt?: (parentId: string, node: EmailNode, index?: number) => void;\n  onInsertAfter?: (targetId: string, node: EmailNode) => void;\n};\n\nconst PlusIcon = ({ size = 18 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden>\n    <path d=\"M12 5v14M5 12h14\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n  </svg>\n);\n\nconst ArrowUpIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden>\n    <path d=\"M12 5l-6 6m6-6l6 6M12 5v14\" stroke=\"currentColor\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nconst ArrowDownIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden>\n    <path d=\"M12 19l6-6m-6 6l-6-6M12 19V5\" stroke=\"currentColor\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nconst TrashIcon = ({ size = 15 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden>\n    <path d=\"M4 7h16M9 7V4h6v3m-8 0l1 12a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2l1-12\" stroke=\"currentColor\" strokeWidth=\"1.6\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nexport const Canvas: React.FC<Props> = ({ root, onSelect, selectedId, onMoveUp, onMoveDown, onRemove, mode = 'edit', factories, onInsertAt, onInsertAfter }) => {\n  const [pickerFor, setPickerFor] = useState<string | undefined>(undefined);\n  const [hoverId, setHoverId] = useState<string | undefined>(undefined);\n\n  function BlockPicker({ onPick }: { onPick: (type: EmailNode['type']) => void }) {\n    const items: Array<{ t: EmailNode['type']; label: string; icon: React.ReactNode }> = [\n      { t: 'text', label: 'Text', icon: <span style={{ fontWeight: 700 }}>T</span> },\n      { t: 'button', label: 'Button', icon: <span>â¬š</span> },\n      { t: 'image', label: 'Image', icon: <span>â–¦</span> },\n      { t: 'spacer', label: 'Spacer', icon: <span>â€”</span> },\n      { t: 'column', label: 'Column', icon: <span>â–¥</span> },\n    ];\n    return (\n      <div className=\"neb-picker\" onClick={(e) => e.stopPropagation()}>\n        {items.map((it) => (\n          <button key={it.t} className=\"neb-pick\" onClick={() => onPick(it.t)}>\n            <div className=\"icon\">{it.icon}</div>\n            <div className=\"lbl\">{it.label}</div>\n          </button>\n        ))}\n      </div>\n    );\n  }\n  function NodeView({ node }: { node: EmailNode }) {\n    const isSelected = mode === 'edit' && node.id === selectedId;\n    const onNodeClick: React.MouseEventHandler = (e) => {\n      e.stopPropagation();\n      if (mode === 'edit') onSelect(node.id);\n    };\n\n    // Render visual preview for each block\n    let rendered: React.ReactNode = null;\n    if (node.type === 'section') {\n      const { backgroundColor = '#ffffff', padding = '24px 24px' } = node.props as any;\n      rendered = (\n        <div style={{ background: backgroundColor, padding }}>\n          {node.children?.map((c) => (\n            <NodeView key={c.id} node={c} />\n          ))}\n        </div>\n      );\n    } else if (node.type === 'column') {\n      const { width = '100%', padding = '0px' } = node.props as any;\n      rendered = (\n        <div style={{ width, padding }}>\n          {node.children?.map((c) => (\n            <NodeView key={c.id} node={c} />\n          ))}\n        </div>\n      );\n    } else if (node.type === 'text') {\n      const { content = '', align = 'left', color = '#111111', fontSize = '14px', lineHeight = '1.5' } = node.props as any;\n      rendered = (\n        <div style={{ textAlign: align as any, color, fontSize, lineHeight }}>{content}</div>\n      );\n    } else if (node.type === 'image') {\n      const { src = '', alt = '', width = '600' } = node.props as any;\n      rendered = (\n        <img src={src} alt={alt} width={Number(width) || undefined} style={{ display: 'block', maxWidth: '100%' }} onClick={(e) => e.preventDefault()} />\n      );\n    } else if (node.type === 'button') {\n      const { label = 'Click me', href = '#', backgroundColor = '#0f172a', color = '#ffffff', padding = '12px 16px', borderRadius = '4px' } = node.props as any;\n      rendered = (\n        <a\n          href={href}\n          onClick={(e) => e.preventDefault()}\n          style={{ display: 'inline-block', background: backgroundColor, color, padding, borderRadius, textDecoration: 'none', fontWeight: 600 }}\n        >\n          {label}\n        </a>\n      );\n    } else if (node.type === 'spacer') {\n      const { height = '16px' } = node.props as any;\n      rendered = <div style={{ height, lineHeight: height, fontSize: 1 }} />;\n    }\n\n    const showPicker = pickerFor === node.id && mode === 'edit';\n    const showAdd = mode === 'edit' && (hoverId === node.id || showPicker);\n    return (\n      <div\n        onClick={onNodeClick}\n        onMouseEnter={() => setHoverId(node.id)}\n        onMouseLeave={() => setHoverId((id) => (id === node.id ? undefined : id))}\n        className={`neb-node ${isSelected ? 'selected' : ''}`}\n      >\n        {showAdd && (\n          <div className=\"neb-add-wrap\" onClick={(e) => e.stopPropagation()}>\n            <button\n              type=\"button\"\n              className=\"neb-add-btn\"\n              title=\"Add block\"\n              onClick={() => setPickerFor((p) => (p === node.id ? undefined : node.id))}\n            >\n              <PlusIcon />\n            </button>\n            {showPicker && (\n              <div className=\"neb-picker-wrap\">\n                <BlockPicker\n                  onPick={(t) => {\n                    if (!factories) return;\n                    const make = (factories as any)[t] as (() => EmailNode) | undefined;\n                    const newNode = make ? make() : ({ id: Math.random().toString(36).slice(2), type: t, props: {} } as EmailNode);\n                    if (node.type === 'section' || node.type === 'column') {\n                      onInsertAt?.(node.id, newNode);\n                    } else {\n                      onInsertAfter?.(node.id, newNode);\n                    }\n                    setPickerFor(undefined);\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        )}\n        {isSelected && mode === 'edit' && (\n          <div className=\"neb-side-ctrl\" onClick={(e) => e.stopPropagation()}>\n            <button className=\"ctrl\" title=\"Move up\" onClick={() => onMoveUp?.(node.id)}><ArrowUpIcon /></button>\n            <button className=\"ctrl\" title=\"Move down\" onClick={() => onMoveDown?.(node.id)}><ArrowDownIcon /></button>\n            <button className=\"ctrl danger\" title=\"Delete\" onClick={() => onRemove?.(node.id)}><TrashIcon /></button>\n          </div>\n        )}\n        {mode === 'edit' && <div className=\"label\">{node.type}</div>}\n        {rendered}\n        \n      </div>\n    );\n  }\n\n  return (\n    <div onClick={() => { setPickerFor(undefined); onSelect(undefined); }} className=\"neb-canvas-wrap\" aria-label=\"Canvas\">\n      <div className={`neb-canvas ${mode === 'preview' ? 'neb-preview' : ''}`}>\n        <div className=\"neb-stage\">\n          <NodeView node={root} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { EmailNode } from '../types';\n\nfunction Field({ label, children }: { label: string; children: React.ReactNode }) {\n  return (\n    <label className=\"field\">\n      <span style={{ fontSize: 12, color: 'var(--subtle)' }}>{label}</span>\n      {children}\n    </label>\n  );\n}\n\ntype Props = {\n  node?: EmailNode;\n  onChange: (patch: Record<string, unknown>) => void;\n};\n\nfunction parsePx(v: any, d = 0): number {\n  if (v == null) return d;\n  const m = String(v).match(/(-?\\d+(?:\\.\\d+)?)/);\n  return m ? Number(m[1]) : d;\n}\n\nfunction toPx(n: number) { return `${Math.round(n)}px`; }\n\nfunction parsePadding(v: any): [number, number, number, number] {\n  const s = String(v ?? '').trim();\n  if (!s) return [24, 24, 24, 24];\n  const parts = s.split(/\\s+/).map((p) => parsePx(p, 0));\n  if (parts.length === 1) return [parts[0], parts[0], parts[0], parts[0]];\n  if (parts.length === 2) return [parts[0], parts[1], parts[0], parts[1]];\n  if (parts.length === 3) return [parts[0], parts[1], parts[2], parts[1]];\n  return [parts[0], parts[1], parts[2], parts[3]];\n}\n\nexport const Inspector: React.FC<Props> = ({ node, onChange }) => {\n  if (!node) return <div className=\"neb\" style={{ color: 'var(--subtle)' }}>Select a node to edit.</div>;\n  const initial = (node.props ?? {}) as any;\n\n  // Local form state to prevent focus loss while typing\n  const [form, setForm] = useState<any>(initial);\n  useEffect(() => { setForm(initial); }, [node.id]);\n\n  // Focus preservation across re-renders\n  const wrapRef = useRef<HTMLDivElement | null>(null);\n  const lastFocusRef = useRef<{ name: string; selStart?: number | null; selEnd?: number | null } | null>(null);\n  // Capture focus inside inspector to remember which field was focused\n  const onFocusCapture: React.FocusEventHandler = (e) => {\n    const t = e.target as HTMLElement;\n    if (!(t instanceof HTMLInputElement || t instanceof HTMLTextAreaElement || t instanceof HTMLSelectElement)) return;\n    lastFocusRef.current = {\n      name: t.name,\n      selStart: (t as HTMLInputElement | HTMLTextAreaElement).selectionStart ?? null,\n      selEnd: (t as HTMLInputElement | HTMLTextAreaElement).selectionEnd ?? null,\n    };\n  };\n  // Also update caret position while typing/clicking\n  const onInputCapture: React.FormEventHandler = (e) => {\n    const t = e.target as HTMLElement;\n    if (t instanceof HTMLInputElement || t instanceof HTMLTextAreaElement) {\n      lastFocusRef.current = {\n        name: t.name,\n        selStart: t.selectionStart ?? null,\n        selEnd: t.selectionEnd ?? null,\n      };\n    }\n  };\n  // When local form changes (set by onChange handlers), ensure the focused element remains focused\n  useLayoutEffect(() => {\n    const root = wrapRef.current;\n    if (!root) return;\n    const active = document.activeElement as Element | null;\n    // If focus is already inside inspector, nothing to do\n    if (active && root.contains(active)) return;\n    const lf = lastFocusRef.current;\n    if (!lf || !lf.name) return;\n    const el = root.querySelector(`[name=\"${CSS.escape(lf.name)}\"]`) as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement | null;\n    if (el) {\n      el.focus({ preventScroll: true });\n      try {\n        if (el instanceof HTMLInputElement || el instanceof HTMLTextAreaElement) {\n          const start = lf.selStart ?? el.value.length;\n          const end = lf.selEnd ?? start;\n          el.setSelectionRange(start, end);\n        }\n      } catch {}\n    }\n  }, [form]);\n\n  // Change helpers\n  const setOnly = (patch: Record<string, any>) => setForm((f: any) => ({ ...f, ...patch }));\n  const commit = (patch?: Record<string, any>) => {\n    if (patch) setOnly(patch);\n    // commit the current form to parent (single render)\n    onChange({ ...form, ...(patch ?? {}) });\n  };\n\n  const props = form;\n  const isText = node.type === 'text';\n  const isButton = node.type === 'button';\n  const isImage = node.type === 'image';\n  const isSection = node.type === 'section';\n  const isColumn = node.type === 'column';\n  const isSpacer = node.type === 'spacer';\n\n  // Field moved to top-level to avoid remounts on each render\n\n  const set = setOnly;\n\n  return (\n    <div className=\"neb neb-inspector\" ref={wrapRef} onFocusCapture={onFocusCapture} onInputCapture={onInputCapture}>\n      <div className=\"body\" style={{ display: 'grid', gap: 10 }}>\n        <div className=\"bgroup\" style={{ display: 'grid', gap: 8 }}>\n          <div style={{ fontWeight: 700, color: 'var(--text)' }}>{node.type.toUpperCase()} block</div>\n\n          {isText && (\n            <>\n              <Field label=\"Content\">\n                <textarea className=\"neb-input\" name=\"content\" rows={3} value={props.content ?? ''}\n                  onChange={(e) => set({ content: e.target.value })}\n                  onBlur={(e) => commit({ content: e.target.value })}\n                />\n              </Field>\n              <div className=\"row\">\n                <Field label=\"Color\">\n                  <input type=\"color\" className=\"neb-color\" name=\"text_color\" value={props.color ?? '#111111'}\n                    onChange={(e) => set({ color: e.target.value })}\n                    onBlur={(e) => commit({ color: e.target.value })}\n                  />\n                </Field>\n                <Field label=\"Align\">\n                  <select className=\"neb-select\" name=\"text_align\" value={props.align ?? 'left'} onChange={(e) => commit({ align: e.target.value })}>\n                    <option value=\"left\">Left</option>\n                    <option value=\"center\">Center</option>\n                    <option value=\"right\">Right</option>\n                  </select>\n                </Field>\n              </div>\n              <Field label=\"Font family\">\n                <select className=\"neb-select\" name=\"font_family\" value={props.fontFamily ?? 'inherit'} onChange={(e) => commit({ fontFamily: e.target.value })}>\n                  <option value=\"inherit\">Inherit</option>\n                  <option value=\"Arial, Helvetica, sans-serif\">Arial</option>\n                  <option value=\"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\">Segoe UI</option>\n                  <option value=\"Roboto, Helvetica, Arial, sans-serif\">Roboto</option>\n                  <option value=\"Georgia, 'Times New Roman', Times, serif\">Georgia</option>\n                  <option value=\"'Times New Roman', Times, serif\">Times</option>\n                  <option value=\"'Courier New', Courier, monospace\">Courier New</option>\n                </select>\n              </Field>\n              <Field label={`Font size: ${parsePx(props.fontSize ?? '14px', 14)}px`}>\n                <input type=\"range\" name=\"font_size\" min={10} max={48} className=\"neb-slider\" value={parsePx(props.fontSize ?? '14px', 14)}\n                  onChange={(e) => set({ fontSize: toPx(Number(e.target.value)) })}\n                  onPointerUp={(e) => commit({ fontSize: toPx(Number((e.target as HTMLInputElement).value)) })}\n                />\n              </Field>\n              <Field label={`Line height: ${(Number(props.lineHeight ?? 1.5)).toFixed(2)}` }>\n                <input type=\"range\" name=\"line_height\" min={1} max={2} step={0.05} className=\"neb-slider\" value={Number(props.lineHeight ?? 1.5)}\n                  onChange={(e) => set({ lineHeight: Number(e.target.value) })}\n                  onPointerUp={(e) => commit({ lineHeight: Number((e.target as HTMLInputElement).value) })}\n                />\n              </Field>\n            </>\n          )}\n\n          {isButton && (\n            <>\n              <Field label=\"Label\">\n                <input className=\"neb-input\" name=\"btn_label\" value={props.label ?? 'Click me'} onChange={(e) => set({ label: e.target.value })} onBlur={(e)=>commit({ label: e.target.value })} />\n              </Field>\n              <Field label=\"Href\">\n                <input className=\"neb-input\" name=\"btn_href\" value={props.href ?? '#'} onChange={(e) => set({ href: e.target.value })} onBlur={(e)=>commit({ href: e.target.value })} />\n              </Field>\n              <div className=\"row\">\n                <Field label=\"Background\">\n                  <input type=\"color\" className=\"neb-color\" name=\"btn_bg\" value={props.backgroundColor ?? '#0f172a'} onChange={(e) => set({ backgroundColor: e.target.value })} onBlur={(e)=>commit({ backgroundColor: e.target.value })} />\n                </Field>\n                <Field label=\"Text color\">\n                  <input type=\"color\" className=\"neb-color\" name=\"btn_color\" value={props.color ?? '#ffffff'} onChange={(e) => set({ color: e.target.value })} onBlur={(e)=>commit({ color: e.target.value })} />\n                </Field>\n              </div>\n              <Field label={`Padding vertical: ${parsePx((props.padding ?? '').split(' ')[0] ?? '12px', 12)}px`}>\n                <input type=\"range\" name=\"btn_pad_v\" min={0} max={32} className=\"neb-slider\" value={parsePx((props.padding ?? '').split(' ')[0] ?? '12px', 12)}\n                  onChange={(e) => {\n                    const v = Number(e.target.value);\n                    const parts = String(props.padding ?? '12px 16px').split(/\\s+/);\n                    const h = parsePx(parts[1] ?? parts[0], 16);\n                    set({ padding: `${toPx(v)} ${toPx(h)}` });\n                  }}\n                  onPointerUp={(e)=>{\n                    const v = Number((e.target as HTMLInputElement).value);\n                    const parts = String(props.padding ?? '12px 16px').split(/\\s+/);\n                    const h = parsePx(parts[1] ?? parts[0], 16);\n                    commit({ padding: `${toPx(v)} ${toPx(h)}` });\n                  }} />\n              </Field>\n              <Field label={`Padding horizontal: ${parsePx((props.padding ?? '').split(' ')[1] ?? '16px', 16)}px`}>\n                <input type=\"range\" name=\"btn_pad_h\" min={0} max={64} className=\"neb-slider\" value={parsePx((props.padding ?? '').split(' ')[1] ?? '16px', 16)}\n                  onChange={(e) => {\n                    const h = Number(e.target.value);\n                    const parts = String(props.padding ?? '12px 16px').split(/\\s+/);\n                    const v = parsePx(parts[0], 12);\n                    set({ padding: `${toPx(v)} ${toPx(h)}` });\n                  }}\n                  onPointerUp={(e)=>{\n                    const h = Number((e.target as HTMLInputElement).value);\n                    const parts = String(props.padding ?? '12px 16px').split(/\\s+/);\n                    const v = parsePx(parts[0], 12);\n                    commit({ padding: `${toPx(v)} ${toPx(h)}` });\n                  }} />\n              </Field>\n              <Field label={`Radius: ${parsePx(props.borderRadius ?? '4px', 4)}px`}>\n                <input type=\"range\" name=\"btn_radius\" min={0} max={32} className=\"neb-slider\" value={parsePx(props.borderRadius ?? '4px', 4)} onChange={(e) => set({ borderRadius: toPx(Number(e.target.value)) })} onPointerUp={(e)=>commit({ borderRadius: toPx(Number((e.target as HTMLInputElement).value)) })} />\n              </Field>\n            </>\n          )}\n\n          {isImage && (\n            <>\n              <Field label=\"Src\">\n                <input className=\"neb-input\" name=\"img_src\" value={props.src ?? ''} onChange={(e) => set({ src: e.target.value })} onBlur={(e)=>commit({ src: e.target.value })} />\n              </Field>\n              <div className=\"row\">\n                <Field label=\"Alt\">\n                  <input className=\"neb-input\" name=\"img_alt\" value={props.alt ?? ''} onChange={(e) => set({ alt: e.target.value })} onBlur={(e)=>commit({ alt: e.target.value })} />\n                </Field>\n                <Field label=\"Width\">\n                  <input type=\"range\" name=\"img_width\" min={50} max={800} className=\"neb-slider\" value={parsePx(props.width ?? '600', 600)} onChange={(e) => set({ width: String(Number(e.target.value)) })} onPointerUp={(e)=>commit({ width: String(Number((e.target as HTMLInputElement).value)) })} />\n                </Field>\n              </div>\n            </>\n          )}\n\n          {isSection && (\n            <>\n              <Field label=\"Background\">\n                <input type=\"color\" className=\"neb-color\" name=\"section_bg\" value={props.backgroundColor ?? '#ffffff'} onChange={(e) => set({ backgroundColor: e.target.value })} onBlur={(e)=>commit({ backgroundColor: e.target.value })} />\n              </Field>\n              {(() => {\n                const [pt, pr, pb, pl] = parsePadding(props.padding ?? '24px 24px');\n                return (\n                  <>\n                    <Field label={`Padding top: ${pt}px`}><input type=\"range\" name=\"section_pad_t\" min={0} max={64} className=\"neb-slider\" value={pt} onChange={(e) => set({ padding: `${toPx(Number(e.target.value))} ${toPx(pr)} ${toPx(pb)} ${toPx(pl)}` })} onPointerUp={(e)=>commit({ padding: `${toPx(Number((e.target as HTMLInputElement).value))} ${toPx(pr)} ${toPx(pb)} ${toPx(pl)}` })} /></Field>\n                    <Field label={`Padding right: ${pr}px`}><input type=\"range\" name=\"section_pad_r\" min={0} max={64} className=\"neb-slider\" value={pr} onChange={(e) => set({ padding: `${toPx(pt)} ${toPx(Number(e.target.value))} ${toPx(pb)} ${toPx(pl)}` })} onPointerUp={(e)=>commit({ padding: `${toPx(pt)} ${toPx(Number((e.target as HTMLInputElement).value))} ${toPx(pb)} ${toPx(pl)}` })} /></Field>\n                    <Field label={`Padding bottom: ${pb}px`}><input type=\"range\" name=\"section_pad_b\" min={0} max={64} className=\"neb-slider\" value={pb} onChange={(e) => set({ padding: `${toPx(pt)} ${toPx(pr)} ${toPx(Number(e.target.value))} ${toPx(pl)}` })} onPointerUp={(e)=>commit({ padding: `${toPx(pt)} ${toPx(pr)} ${toPx(Number((e.target as HTMLInputElement).value))} ${toPx(pl)}` })} /></Field>\n                    <Field label={`Padding left: ${pl}px`}><input type=\"range\" name=\"section_pad_l\" min={0} max={64} className=\"neb-slider\" value={pl} onChange={(e) => set({ padding: `${toPx(pt)} ${toPx(pr)} ${toPx(pb)} ${toPx(Number(e.target.value))}` })} onPointerUp={(e)=>commit({ padding: `${toPx(pt)} ${toPx(pr)} ${toPx(pb)} ${toPx(Number((e.target as HTMLInputElement).value))}` })} /></Field>\n                  </>\n                );\n              })()}\n              <Field label={`Border radius: ${parsePx(props.borderRadius ?? '0px', 0)}px`}>\n                <input type=\"range\" name=\"section_radius\" min={0} max={32} className=\"neb-slider\" value={parsePx(props.borderRadius ?? '0px', 0)} onChange={(e) => set({ borderRadius: toPx(Number(e.target.value)) })} onPointerUp={(e)=>commit({ borderRadius: toPx(Number((e.target as HTMLInputElement).value)) })} />\n              </Field>\n              <Field label=\"Border color\">\n                <input type=\"color\" className=\"neb-color\" name=\"section_border\" value={props.borderColor ?? '#000000'} onChange={(e) => set({ borderColor: e.target.value })} onBlur={(e)=>commit({ borderColor: e.target.value })} />\n              </Field>\n            </>\n          )}\n\n          {isColumn && (\n            <>\n              <Field label=\"Width\">\n                <input type=\"range\" name=\"col_width\" min={10} max={100} className=\"neb-slider\" value={parsePx(props.width ?? '100%', 100)} onChange={(e) => set({ width: `${Number(e.target.value)}%` })} onPointerUp={(e)=>commit({ width: `${Number((e.target as HTMLInputElement).value)}%` })} />\n              </Field>\n              <Field label=\"Padding\">\n                <input type=\"range\" name=\"col_padding\" min={0} max={48} className=\"neb-slider\" value={parsePx(props.padding ?? '0px', 0)} onChange={(e) => set({ padding: toPx(Number(e.target.value)) })} onPointerUp={(e)=>commit({ padding: toPx(Number((e.target as HTMLInputElement).value)) })} />\n              </Field>\n            </>\n          )}\n\n          {isSpacer && (\n            <Field label={`Height: ${parsePx(props.height ?? '16px', 16)}px`}>\n              <input type=\"range\" name=\"spacer_height\" min={4} max={64} className=\"neb-slider\" value={parsePx(props.height ?? '16px', 16)} onChange={(e) => set({ height: toPx(Number(e.target.value)) })} onPointerUp={(e)=>commit({ height: toPx(Number((e.target as HTMLInputElement).value)) })} />\n            </Field>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { AssistantAction, EmailNode } from '../types';\n\nexport interface ChatAdapter {\n  send: (ctx: { root: EmailNode; message: string }) => Promise<AssistantAction[]>;\n}\n\ntype Props = {\n  root: EmailNode;\n  onActions: (actions: AssistantAction[]) => void;\n  adapter: ChatAdapter;\n};\n\nexport const ChatPanel: React.FC<Props> = ({ root, onActions, adapter }) => {\n  const [input, setInput] = useState('');\n  const [busy, setBusy] = useState(false);\n\n  async function onSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    if (!input.trim()) return;\n    setBusy(true);\n    try {\n      const actions = await adapter.send({ root, message: input.trim() });\n      onActions(actions);\n      setInput('');\n    } finally {\n      setBusy(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit} style={{ display: 'flex', gap: 8 }}>\n      <input\n        placeholder=\"Ask AI to update your emailâ€¦\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        disabled={busy}\n        style={{ flex: 1, padding: 8, border: '1px solid #cbd5e1', borderRadius: 8 }}\n      />\n      <button disabled={busy} style={{ padding: '8px 12px', borderRadius: 8, border: '1px solid #0ea5e9', background: '#0ea5e9', color: '#fff' }}>\n        {busy ? 'Thinkingâ€¦' : 'Send'}\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  mode: 'edit' | 'preview';\n  onSetMode: (m: 'edit' | 'preview') => void;\n  onCopyHtml: () => void;\n  onExportHtml: () => void;\n  onPreviewWidth: (w: number) => void;\n  onUndo: () => void;\n  onRedo: () => void;\n  activeWidth?: number;\n};\n\nconst PencilIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\n    <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25z\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\"/>\n    <path d=\"M14.06 6.19l3.75 3.75 1.65-1.65a1.5 1.5 0 000-2.12l-1.53-1.53a1.5 1.5 0 00-2.12 0l-1.65 1.65z\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\"/>\n  </svg>\n);\n\nconst EyeIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\n    <path d=\"M2 12s3.5-6 10-6 10 6 10 6-3.5 6-10 6S2 12 2 12z\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"3\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\"/>\n  </svg>\n);\n\nconst PhoneIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\n    <rect x=\"8\" y=\"3\" width=\"8\" height=\"18\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\"/>\n    <circle cx=\"12\" cy=\"18\" r=\"1\" fill=\"currentColor\" />\n  </svg>\n);\n\nconst TabletIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\n    <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\"/>\n    <circle cx=\"12\" cy=\"16.5\" r=\"0.8\" fill=\"currentColor\" />\n  </svg>\n);\n\nconst DesktopIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\n    <rect x=\"3\" y=\"4\" width=\"18\" height=\"12\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\"/>\n    <path d=\"M9 20h6\" stroke=\"currentColor\" strokeWidth=\"1.5\"/>\n    <path d=\"M10 16v4M14 16v4\" stroke=\"currentColor\" strokeWidth=\"1.5\"/>\n  </svg>\n);\n\nexport const Toolbar: React.FC<Props> = ({ mode, onSetMode, onCopyHtml, onExportHtml, onPreviewWidth, onUndo, onRedo, activeWidth }) => {\n  const isActiveWidth = (w: number) => activeWidth === w;\n  return (\n    <div className=\"neb neb-toolbar\">\n      <div className=\"group\">\n        <button className=\"neb-btn ghost\" title=\"Undo\" onClick={onUndo}>â†¶</button>\n        <button className=\"neb-btn ghost\" title=\"Redo\" onClick={onRedo}>â†·</button>\n      </div>\n      <div className=\"group\">\n        <span style={{ color: 'var(--subtle)', fontSize: 12 }}>Mode</span>\n        <div className=\"neb-seg\" role=\"group\" aria-label=\"Mode\">\n          <button\n            type=\"button\"\n            className={`seg-btn ${mode === 'edit' ? 'active' : ''}`}\n            onClick={() => onSetMode('edit')}\n            aria-pressed={mode === 'edit'}\n            title=\"Edit\"\n          >\n            <PencilIcon />\n          </button>\n          <button\n            type=\"button\"\n            className={`seg-btn ${mode === 'preview' ? 'active' : ''}`}\n            onClick={() => onSetMode('preview')}\n            aria-pressed={mode === 'preview'}\n            title=\"Preview\"\n          >\n            <EyeIcon />\n          </button>\n        </div>\n      </div>\n      <div className=\"group\">\n        <span style={{ color: 'var(--subtle)', fontSize: 12 }}>Preview</span>\n        <div className=\"neb-seg\" role=\"group\" aria-label=\"Preview width\">\n          <button\n            type=\"button\"\n            className={`seg-btn ${isActiveWidth?.(360) ? 'active' : ''}`}\n            onClick={() => onPreviewWidth(360)}\n            aria-pressed={isActiveWidth?.(360)}\n            title=\"Mobile\"\n          >\n            <PhoneIcon />\n          </button>\n          <button\n            type=\"button\"\n            className={`seg-btn ${isActiveWidth?.(600) ? 'active' : ''}`}\n            onClick={() => onPreviewWidth(600)}\n            aria-pressed={isActiveWidth?.(600)}\n            title=\"Default\"\n          >\n            <TabletIcon />\n          </button>\n          <button\n            type=\"button\"\n            className={`seg-btn ${isActiveWidth?.(800) ? 'active' : ''}`}\n            onClick={() => onPreviewWidth(800)}\n            aria-pressed={isActiveWidth?.(800)}\n            title=\"Desktop\"\n          >\n            <DesktopIcon />\n          </button>\n        </div>\n      </div>\n      <div className=\"group\">\n        <button className=\"neb-btn\" onClick={onCopyHtml}>Copy HTML</button>\n        <button className=\"neb-btn primary\" onClick={onExportHtml}>Export</button>\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport { Canvas } from './components/Canvas';\nimport { Inspector } from './components/Inspector';\nimport { ChatPanel, ChatAdapter } from './chat/ChatPanel';\n// Sidebar removed; left panel will host AI chat\nimport { Toolbar } from './components/Toolbar';\nimport { EmailNode } from './types';\nimport { createButton, createColumn, createImage, createSection, createSpacer, createText, findNode, insertNode, removeNode, updateNode, moveSibling } from './core';\nimport { renderToHtml } from './renderers/html';\n\nexport type EditorProps = {\n  initial?: EmailNode;\n  chatAdapter?: ChatAdapter;\n  onChange?: (root: EmailNode) => void;\n};\n\nexport const Editor: React.FC<EditorProps> = ({ initial, chatAdapter, onChange }) => {\n  const [root, setRoot] = useState<EmailNode>(() => initial ?? createSection({}, [createColumn({}, [createText({ content: 'Hello' }), createSpacer(), createButton()])]))\n  const [selectedId, setSelectedId] = useState<string | undefined>(root.id);\n  const [mode, setMode] = useState<'edit' | 'preview'>('edit');\n  const [undoStack, setUndoStack] = useState<EmailNode[]>([]);\n  const [redoStack, setRedoStack] = useState<EmailNode[]>([]);\n\n  const selected = useMemo(() => (selectedId ? findNode(root, selectedId) : undefined), [root, selectedId]);\n\n  function emit(next: EmailNode, pushHistory: boolean = true) {\n    if (pushHistory) {\n      setUndoStack((s) => [...s, root]);\n      setRedoStack([]);\n    }\n    setRoot(next);\n    onChange?.(next);\n  }\n\n  function undo() {\n    setUndoStack((s) => {\n      if (s.length === 0) return s;\n      const prev = s[s.length - 1];\n      setRedoStack((r) => [...r, root]);\n      setRoot(prev);\n      onChange?.(prev);\n      return s.slice(0, -1);\n    });\n  }\n\n  function redo() {\n    setRedoStack((r) => {\n      if (r.length === 0) return r;\n      const next = r[r.length - 1];\n      setUndoStack((s) => [...s, root]);\n      setRoot(next);\n      onChange?.(next);\n      return r.slice(0, -1);\n    });\n  }\n\n  function add(node: EmailNode) {\n    const parentId = selectedId ?? root.id;\n    emit(insertNode(root, parentId, node));\n  }\n\n  function insertAfter(targetId: string, node: EmailNode) {\n    // Find parent and index of target, then insert at index+1\n    // Reuse findNode to walk for parent since we have utilities in core for reordering\n    function walk(n: EmailNode, p?: EmailNode): { parent?: EmailNode; index?: number } | undefined {\n      if (!n.children) return undefined;\n      const idx = n.children.findIndex((c) => c.id === targetId);\n      if (idx >= 0) return { parent: n, index: idx };\n      for (const c of n.children) {\n        const r = walk(c, n);\n        if (r) return r;\n      }\n      return undefined;\n    }\n    const info = walk(root);\n    if (info?.parent && info.index !== undefined) {\n      emit(insertNode(root, info.parent.id, node, info.index + 1));\n    } else {\n      // If not found as a sibling, append to root\n      emit(insertNode(root, root.id, node));\n    }\n  }\n\n  function applyActions(actions: Array<{ type: string; [k: string]: any }>) {\n    let current = root;\n    for (const a of actions) {\n      switch (a.type) {\n        case 'insert':\n          current = insertNode(current, a.parentId, a.node, a.index);\n          break;\n        case 'update':\n          current = updateNode(current, a.id, a.props);\n          break;\n        case 'remove':\n          current = removeNode(current, a.id);\n          break;\n        case 'select':\n          setSelectedId(a.id);\n          break;\n      }\n    }\n    emit(current);\n  }\n\n  const factories = {\n    text: () => createText(),\n    image: () => createImage(),\n    button: () => createButton(),\n    spacer: () => createSpacer(),\n    column: () => createColumn(),\n    section: () => createSection(),\n  } as const;\n\n  const adapter: ChatAdapter = chatAdapter ?? {\n    async send({ message }) {\n      // naive local adapter: parse a very simple command\n      if (/add text/i.test(message)) {\n        return [{ type: 'insert', parentId: selectedId ?? root.id, node: createText({ content: 'New text' }) }];\n      }\n      if (/add button/i.test(message)) {\n        return [{ type: 'insert', parentId: selectedId ?? root.id, node: createButton({ label: 'Buy now' }) }];\n      }\n      if (/remove/i.test(message) && selectedId) {\n        return [{ type: 'remove', id: selectedId }];\n      }\n      if (/title:\\s*(.+)/i.test(message)) {\n        const m = message.match(/title:\\s*(.+)/i)!;\n        return [{ type: 'update', id: selectedId ?? root.id, props: { content: m[1] } }];\n      }\n      return [];\n    },\n  };\n\n  const [stageWidth, setStageWidth] = useState(600);\n  const html = useMemo(() => renderToHtml(root), [root]);\n\n  // Templates removed; left panel hosts Chat instead\n\n  return (\n    <div className=\"neb neb-reset neb-app\" style={{ ['--stage-width' as any]: `${stageWidth}px` }}>\n      <Toolbar\n        mode={mode}\n        onSetMode={setMode}\n        onCopyHtml={() => navigator.clipboard?.writeText(html)}\n        onExportHtml={() => {\n          const blob = new Blob([html], { type: 'text/html;charset=utf-8' });\n          const url = URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = 'email.html';\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          URL.revokeObjectURL(url);\n        }}\n        onPreviewWidth={(w) => setStageWidth(w)}\n        activeWidth={stageWidth}\n        onUndo={undo}\n        onRedo={redo}\n      />\n      <div className=\"neb-shell\" style={{ gridTemplateColumns: '320px 1fr 340px' }}>\n        <div className=\"neb-panel\">\n          <div className=\"header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <div className=\"neb-badges\"><span className=\"neb-badge\">AI</span></div>\n            <div className=\"neb-badges\"><span className=\"neb-badge\">Chat</span></div>\n          </div>\n          <div className=\"body\">\n            {chatAdapter !== null && (\n              <ChatPanel root={root} onActions={applyActions} adapter={adapter} />\n            )}\n          </div>\n        </div>\n        <div className=\"neb-panel\">\n          <div className=\"header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <div className=\"neb-badges\">\n              <span className=\"neb-badge\">Width {stageWidth}px</span>\n              <span className=\"neb-badge\">{mode === 'edit' ? 'Edit' : 'Preview'}</span>\n            </div>\n            <div className=\"neb-badges\">\n              <span className=\"neb-badge\">Blocks</span>\n            </div>\n          </div>\n          <div className=\"body\" style={{ display: 'grid' }}>\n            <Canvas\n              root={root}\n              onSelect={setSelectedId}\n              selectedId={selectedId}\n              onMoveUp={(id) => emit(moveSibling(root, id, -1))}\n              onMoveDown={(id) => emit(moveSibling(root, id, +1))}\n              onRemove={(id) => emit(removeNode(root, id))}\n              mode={mode}\n              factories={factories as any}\n              onInsertAt={(parentId, node, index) => emit(insertNode(root, parentId, node, index))}\n              onInsertAfter={(id, n) => insertAfter(id, n)}\n            />\n          </div>\n        </div>\n\n        <div className=\"neb-panel neb-inspector\">\n          <div className=\"header\">Inspect</div>\n          <div className=\"body\">\n            <Inspector node={selected} onChange={(patch) => selected && emit(updateNode(root, selected.id, patch))} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Editor;\n","import React from 'react';\nimport { EmailNode } from '../types';\n\ntype Props = {\n  templates: Array<{ id: string; name: string; make: () => EmailNode }>;\n  onApply: (node: EmailNode) => void;\n};\n\nexport const Sidebar: React.FC<Props> = ({ templates, onApply }) => {\n  return (\n    <div className=\"neb neb-panel neb-sidebar\">\n      <div className=\"header\">Templates</div>\n      <div className=\"body\">\n        {templates.map((t) => (\n          <div key={t.id} className=\"template\" onClick={() => onApply(t.make())}>\n            {t.name}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"names":["uid","Math","random","toString","slice","createSection","props","children","id","type","backgroundColor","padding","align","createColumn","width","createText","content","color","fontSize","lineHeight","createImage","src","alt","createButton","label","href","borderRadius","createSpacer","height","findNode","root","undefined","child","res","updateNode","patch","map","c","insertNode","parentId","node","index","_a","i","length","max","min","splice","removeNode","filtered","filter","moveNode","newParentId","newIndex","extracted","_remove","n","idx","findIndex","nextChildren","without","findParent","parent","moveSibling","delta","info","to","replaced","write","esc","s","String","replace","renderToHtml","inner","renderNode","join","_b","img","PlusIcon","size","_jsx","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","ArrowUpIcon","strokeLinejoin","ArrowDownIcon","TrashIcon","Canvas","onSelect","selectedId","onMoveUp","onMoveDown","onRemove","mode","factories","onInsertAt","onInsertAfter","pickerFor","setPickerFor","useState","hoverId","setHoverId","BlockPicker","onPick","items","t","icon","style","fontWeight","className","onClick","e","stopPropagation","it","_jsxs","NodeView","isSelected","onNodeClick","rendered","background","textAlign","Number","display","maxWidth","preventDefault","textDecoration","showPicker","showAdd","onMouseEnter","onMouseLeave","title","p","make","newNode","Field","parsePx","v","m","match","toPx","round","parsePadding","trim","parts","split","Inspector","onChange","initial","form","setForm","useEffect","wrapRef","useRef","lastFocusRef","onFocusCapture","target","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","current","name","selStart","selectionStart","selEnd","selectionEnd","onInputCapture","useLayoutEffect","active","document","activeElement","contains","lf","el","querySelector","CSS","escape","focus","preventScroll","start","value","end","setSelectionRange","setOnly","f","commit","isText","isButton","isImage","isSection","isColumn","isSpacer","set","ref","gap","toUpperCase","_Fragment","rows","onBlur","_c","_d","_e","fontFamily","_f","_g","onPointerUp","_h","toFixed","step","_j","_k","_l","_m","_o","_q","_p","_s","_r","h","_u","_t","_w","_v","_x","_y","_z","_0","_1","_2","pt","pr","pb","pl","_3","_4","_5","borderColor","_6","_7","_8","_9","ChatPanel","onActions","adapter","input","setInput","busy","setBusy","onSubmit","actions","send","message","placeholder","disabled","flex","border","PencilIcon","EyeIcon","cx","cy","r","PhoneIcon","x","y","rx","TabletIcon","DesktopIcon","Toolbar","onSetMode","onCopyHtml","onExportHtml","onPreviewWidth","onUndo","onRedo","activeWidth","isActiveWidth","w","role","Editor","chatAdapter","setRoot","setSelectedId","setMode","undoStack","setUndoStack","redoStack","setRedoStack","selected","useMemo","emit","next","pushHistory","undo","prev","redo","insertAfter","targetId","walk","applyActions","a","text","image","button","spacer","column","section","test","stageWidth","setStageWidth","html","navigator","clipboard","writeText","blob","Blob","url","URL","createObjectURL","createElement","download","body","appendChild","click","remove","revokeObjectURL","gridTemplateColumns","justifyContent","alignItems","Sidebar","templates","onApply"],"mappings":"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"}